@tailwind base;
@tailwind components;
@tailwind utilities;

/* Fonts */
@font-face {
    font-family: 'roboto';
    src: url('./assets/fonts/RobotoRegular.ttf');
}

@font-face {
    font-family: 'poppins';
    src: url('./assets/fonts/PoppinsRegular.ttf');
}

@font-face {
    font-family: 'onest';
    src: url('./assets/fonts/OnestRegular.ttf');
}

* {
    font-family: 'onest', fantasy;
    font-size: 18px;
    color: white;
}

/*General*/

html {
    scroll-behavior: smooth;
    scroll-padding-top: 150px;
}

/* Web style */

hr {
    background-color: #374151;
    height: 1px;
    border: none;
}

.text-light {
    color: #D1D5DB
}

.background-gradient {
    background-color: rgb(3 7 18);
    background-image: radial-gradient(
        ellipse 80% 80% at 50% -20%,
        rgba(120,119,198,0.3),
        rgba(255,255,255,0)
    );
}

.strong-style {
    color: #FEF08A;
}

.inner-curve {
    --r: 4px;  /* control the rounded part */
    --s: 8px;  /* control the size of the cut */
    --a: 4deg; /* control the depth of the curvature */

    width: 100px;
    background: cadetblue;
    border-radius: var(--r);
    --_m:0/calc(2*var(--r)) var(--r) no-repeat
    radial-gradient(50% 100% at bottom,#000 calc(100% - 1px),#0000);
    --_d:(var(--s) + var(--r))*cos(var(--a));
    mask:
            calc(50% + var(--_d)) var(--_m),calc(50% - var(--_d)) var(--_m),
            radial-gradient(var(--s) at 50% calc(-1*sin(var(--a))*var(--s)),
            #0000 100%,#000 calc(100% + 1px)) 0 calc(var(--r)*(1 - sin(var(--a)))) no-repeat,
            linear-gradient(90deg,#000 calc(50% - var(--_d)),#0000 0 calc(50% + var(--_d)),#000 0);

    display: flex;
    justify-content: center;
    align-items: center;
}

.hexagon {
    height: 100px;
    aspect-ratio: cos(30deg);
    clip-path: polygon(-50% 50%,50% 100%,150% 50%,50% 0);
    display: flex;
    justify-content: center;
    align-items: center;

}

/* Diagram */

.react-flow__panel {
    display: none;
}

.react-flow__handle.target {
    opacity: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.react-flow__handle.source {
    opacity: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Custom nodes */

.react-flow__node-diferent {
    border-radius: 50%;
    width: 100px;
    height: 100px;
}

.react-flow__node-language {
    width: 100px;
    border-radius: 4px;
}

.react-flow__node-beam {
    border-radius: 4px;
}